@page "/CV/Docentes/{idDocente:int}/Ver/Publicaciones"
@using Entidades.DTO.CurriculumVite
@using Servicios.IRepositorios.CurriculumVite
@inject ISRepositorioPublicacion PublicacionServicios
@inject ISDocenteRepositorio DocenteServicios
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Publicaciones - UABC</PageTitle>

<div class="container-fluid" style="background-color: #F8F9FA; min-height: 100vh; padding: 0;">
    @if (CargandoPublicaciones)
    {
        <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
            <div class="text-center">
                <div class="spinner-border text-success" role="status" style="color: #2D6B3C !important;">
                    <span class="visually-hidden">Cargando...</span>
                </div>
                <p class="mt-3 text-muted">Cargando publicaciones...</p>
            </div>
        </div>
    }
    else
    {
        <!-- Header -->
        <div class="container-fluid py-4" style="background: linear-gradient(135deg, #2D6B3C 0%, #4BB463 100%); color: white;">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb mb-2" style="--bs-breadcrumb-divider-color: rgba(255,255,255,0.6);">
                                <li class="breadcrumb-item">
                                    <a href="/CV/Docentes" style="color: rgba(255,255,255,0.8); text-decoration: none;">
                                        <i class="fas fa-users"></i> Docentes
                                    </a>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="/CV/Docentes/Ver/@IdDocente" style="color: rgba(255,255,255,0.8); text-decoration: none;">
                                        @NombreDocente
                                    </a>
                                </li>
                                <li class="breadcrumb-item active" style="color: white;">Publicaciones</li>
                            </ol>
                        </nav>
                        <h1 class="mb-0">
                            <i class="fas fa-book"></i> Publicaciones de @NombreDocente
                        </h1>
                        <p class="mb-0 opacity-75">Vista de todas las publicaciones académicas</p>
                    </div>
                    <div class="col-md-4 text-end">
                        <button class="btn btn-light" @onclick="RegresarAlPerfil">
                            <i class="fas fa-arrow-left"></i> Regresar al Perfil
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Estadísticas -->
        <div class="container mt-4">
            <div class="row">
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #E8F5E8;">
                                    <i class="fas fa-book" style="color: #2D6B3C; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #2D6B3C;">@ListaPublicaciones.Count</h3>
                            <p class="text-muted mb-0 small">Total Publicaciones</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #FDF4E1;">
                                    <i class="fas fa-calendar" style="color: #F4BF3A; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #F4BF3A;">@ListaPublicaciones.Where(p => p.Anio >= DateTime.Now.Year - 5).Count()</h3>
                            <p class="text-muted mb-0 small">Últimos 5 años</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #E1F4FF;">
                                    <i class="fas fa-tags" style="color: #4BB463; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #4BB463;">@ListaPublicaciones.Select(p => p.TipoPublicacion).Distinct().Count()</h3>
                            <p class="text-muted mb-0 small">Tipos Diferentes</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #F3E8FF;">
                                    <i class="fas fa-link" style="color: #8B5CF6; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #8B5CF6;">@ListaPublicaciones.Count(p => !string.IsNullOrEmpty(p.Enlace))</h3>
                            <p class="text-muted mb-0 small">Con Enlaces</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filtros -->
        <div class="container mt-4">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="row align-items-end">
                        <div class="col-md-4">
                            <label class="form-label small text-muted">Buscar publicación</label>
                            <input type="text" class="form-control" @bind="FiltroTexto" @bind:event="oninput" 
                                   placeholder="Buscar por título, autores, fuente...">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label small text-muted">Filtrar por tipo</label>
                            <select class="form-select" @bind="FiltroTipo">
                                <option value="">Todos los tipos</option>
                                @foreach (var tipo in ListaPublicaciones.Select(p => p.TipoPublicacion).Distinct().Where(t => !string.IsNullOrEmpty(t)))
                                {
                                    <option value="@tipo">@tipo</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label small text-muted">Ordenar por</label>
                            <select class="form-select" @bind="OrdenarPor">
                                <option value="anio">Año (más reciente)</option>
                                <option value="titulo">Título</option>
                                <option value="tipo">Tipo de publicación</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button class="btn btn-outline-secondary w-100" @onclick="LimpiarFiltros">
                                <i class="fas fa-eraser"></i> Limpiar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista de Publicaciones -->
        <div class="container mt-4 mb-5">
            @if (!PublicacionesFiltradas.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-3">
                        <i class="fas fa-book fa-3x text-muted"></i>
                    </div>
                    <h5 class="text-muted">No se encontraron publicaciones</h5>
                    <p class="text-muted">@(string.IsNullOrEmpty(FiltroTexto) ? "Este docente no tiene publicaciones registradas" : "Intenta con otros términos de búsqueda")</p>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var publicacion in PublicacionesFiltradas)
                    {
                        <div class="col-12 mb-3">
                            <div class="card border-0 shadow-sm publication-card">
                                <div class="card-body">
                                    <div class="row align-items-start">
                                        <div class="col-md-9">
                                            <div class="d-flex align-items-start mb-2">
                                                <div class="me-3">
                                                    <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                                         style="width: 45px; height: 45px; background-color: #E8F5E8;">
                                                        <i class="fas fa-book" style="color: #2D6B3C;"></i>
                                                    </div>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <h5 class="card-title mb-1">@publicacion.Titulo</h5>
                                                    <p class="text-primary mb-1">
                                                        <i class="fas fa-users me-1"></i>@publicacion.Autores
                                                    </p>
                                                    <div class="d-flex align-items-center text-muted small mb-2">
                                                        <i class="fas fa-bookmark me-1"></i>
                                                        <span class="me-3">@publicacion.Fuente</span>
                                                        <i class="fas fa-calendar me-1"></i>
                                                        <span>@publicacion.Anio</span>
                                                    </div>
                                                    <div class="d-flex align-items-center gap-2">
                                                        <span class="badge bg-primary">@publicacion.TipoPublicacion</span>
                                                        @if (!string.IsNullOrEmpty(publicacion.Enlace))
                                                        {
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-link"></i> Enlace disponible
                                                            </span>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3 text-end">
                                            @if (!string.IsNullOrEmpty(publicacion.Enlace))
                                            {
                                                <a href="@publicacion.Enlace" target="_blank" class="btn btn-outline-primary btn-sm">
                                                    <i class="fas fa-external-link-alt"></i> Ver Publicación
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter] public int IdDocente { get; set; }
    
    private List<PublicacionDTO> ListaPublicaciones = new();
    private List<PublicacionDTO> PublicacionesFiltradas = new();
    private string NombreDocente = "";
    private bool CargandoPublicaciones = true;
    
    // Filtros
    private string FiltroTexto = "";
    private string FiltroTipo = "";
    private string OrdenarPor = "anio";

    protected override async Task OnInitializedAsync()
    {
        await CargarDatos();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (IdDocente > 0)
        {
            await CargarDatos();
        }
    }

    private async Task CargarDatos()
    {
        try
        {
            CargandoPublicaciones = true;
            StateHasChanged();

            // Cargar docente
            var resultadoDocente = await DocenteServicios.ObtenerDocente<DocenteDTO>(IdDocente);
            if (resultadoDocente.Resultado && resultadoDocente.Entidad != null)
            {
                var docente = resultadoDocente.Entidad;
                NombreDocente = $"{docente.NombreDocente} {docente.PaternoDocente} {docente.MaternoDocente}".Trim();
            }

            // Cargar publicaciones
            var publicaciones = await PublicacionServicios.GetAllAsync();
            if (publicaciones != null)
            {
                ListaPublicaciones = publicaciones
                    .Where(p => p.IdDocente == IdDocente)
                    .Select(p => new PublicacionDTO
                    {
                        IdPublicacion = p.IdPublicacion,
                        IdDocente = p.IdDocente,
                        Titulo = p.Titulo,
                        TipoPublicacion = p.TipoPublicacion,
                        Autores = p.Autores,
                        Fuente = p.Fuente,
                        Anio = p.Anio,
                        Enlace = p.Enlace,
                        NombreDocente = NombreDocente
                    })
                    .ToList();
                    
                AplicarFiltros();
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al cargar datos: {ex.Message}");
        }
        finally
        {
            CargandoPublicaciones = false;
            StateHasChanged();
        }
    }

    private void AplicarFiltros()
    {
        var publicacionesFiltradas = ListaPublicaciones.AsEnumerable();

        // Filtro por texto
        if (!string.IsNullOrEmpty(FiltroTexto))
        {
            publicacionesFiltradas = publicacionesFiltradas.Where(p =>
                (p.Titulo?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (p.Autores?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (p.Fuente?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (p.TipoPublicacion?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false)
            );
        }

        // Filtro por tipo
        if (!string.IsNullOrEmpty(FiltroTipo))
        {
            publicacionesFiltradas = publicacionesFiltradas.Where(p => p.TipoPublicacion == FiltroTipo);
        }

        // Ordenar
        publicacionesFiltradas = OrdenarPor switch
        {
            "titulo" => publicacionesFiltradas.OrderBy(p => p.Titulo),
            "tipo" => publicacionesFiltradas.OrderBy(p => p.TipoPublicacion).ThenByDescending(p => p.Anio),
            _ => publicacionesFiltradas.OrderByDescending(p => p.Anio)
        };

        PublicacionesFiltradas = publicacionesFiltradas.ToList();
        StateHasChanged();
    }

    private void LimpiarFiltros()
    {
        FiltroTexto = "";
        FiltroTipo = "";
        OrdenarPor = "anio";
        AplicarFiltros();
    }

    private void RegresarAlPerfil()
    {
        NavigationManager.NavigateTo($"/CV/Docentes/Ver/{IdDocente}");
    }
}

<style>
    .publication-card {
        transition: all 0.3s ease;
        border-left: 4px solid #E9ECEF;
    }

    .publication-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(45, 107, 60, 0.15) !important;
        border-left-color: #2D6B3C;
    }

    .publication-card .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2D6B3C;
        line-height: 1.3;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .badge {
        font-size: 0.7rem;
        font-weight: 500;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .publication-card .card-body {
            padding: 1rem;
        }
    }
</style> 