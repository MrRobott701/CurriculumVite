@page "/CV/Docentes/{idDocente:int}/Ver/Proyectos"
@using Entidades.DTO.CurriculumVite
@using Servicios.IRepositorios.CurriculumVite
@inject ISRepositorioProyecto ProyectoServicios
@inject ISDocenteRepositorio DocenteServicios
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Proyectos - UABC</PageTitle>

<div class="container-fluid" style="background-color: #F8F9FA; min-height: 100vh; padding: 0;">
    @if (CargandoProyectos)
    {
        <div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
            <div class="text-center">
                <div class="spinner-border text-success" role="status" style="color: #2D6B3C !important;">
                    <span class="visually-hidden">Cargando...</span>
                </div>
                <p class="mt-3 text-muted">Cargando proyectos de investigación...</p>
            </div>
        </div>
    }
    else
    {
        <!-- Header -->
        <div class="container-fluid py-4" style="background: linear-gradient(135deg, #2D6B3C 0%, #4BB463 100%); color: white;">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb mb-2" style="--bs-breadcrumb-divider-color: rgba(255,255,255,0.6);">
                                <li class="breadcrumb-item">
                                    <a href="/CV/Docentes" style="color: rgba(255,255,255,0.8); text-decoration: none;">
                                        <i class="fas fa-users"></i> Docentes
                                    </a>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="/CV/Docentes/Ver/@IdDocente" style="color: rgba(255,255,255,0.8); text-decoration: none;">
                                        @NombreDocente
                                    </a>
                                </li>
                                <li class="breadcrumb-item active" style="color: white;">Proyectos</li>
                            </ol>
                        </nav>
                        <h1 class="mb-0">
                            <i class="fas fa-project-diagram"></i> Proyectos de Investigación de @NombreDocente
                        </h1>
                        <p class="mb-0 opacity-75">Vista de todos los proyectos de investigación</p>
                    </div>
                    <div class="col-md-4 text-end">
                        <button class="btn btn-light" @onclick="RegresarAlPerfil">
                            <i class="fas fa-arrow-left"></i> Regresar al Perfil
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Estadísticas -->
        <div class="container mt-4">
            <div class="row">
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #E8F5E8;">
                                    <i class="fas fa-project-diagram" style="color: #2D6B3C; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #2D6B3C;">@ListaProyectos.Count</h3>
                            <p class="text-muted mb-0 small">Total Proyectos</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #FDF4E1;">
                                    <i class="fas fa-play-circle" style="color: #F4BF3A; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #F4BF3A;">@ListaProyectos.Count(p => p.EsActivo)</h3>
                            <p class="text-muted mb-0 small">Activos</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #E1F4FF;">
                                    <i class="fas fa-university" style="color: #4BB463; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #4BB463;">@ListaProyectos.Select(p => p.Institucion).Distinct().Count()</h3>
                            <p class="text-muted mb-0 small">Instituciones</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-0 shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="d-flex align-items-center justify-content-center mb-2">
                                <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                     style="width: 50px; height: 50px; background-color: #F3E8FF;">
                                    <i class="fas fa-dollar-sign" style="color: #8B5CF6; font-size: 1.5rem;"></i>
                                </div>
                            </div>
                            <h3 class="mb-1" style="color: #8B5CF6;">@ListaProyectos.Count(p => p.TieneFinanciamiento)</h3>
                            <p class="text-muted mb-0 small">Con Financiamiento</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filtros -->
        <div class="container mt-4">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="row align-items-end">
                        <div class="col-md-4">
                            <label class="form-label small text-muted">Buscar proyecto</label>
                            <input type="text" class="form-control" @bind="FiltroTexto" @bind:event="oninput" 
                                   placeholder="Buscar por título, institución, rol...">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label small text-muted">Filtrar por estado</label>
                            <select class="form-select" @bind="FiltroEstado">
                                <option value="">Todos</option>
                                <option value="activo">Activos</option>
                                <option value="finalizado">Finalizados</option>
                                <option value="financiado">Con financiamiento</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label small text-muted">Ordenar por</label>
                            <select class="form-select" @bind="OrdenarPor">
                                <option value="periodo">Período (más reciente)</option>
                                <option value="titulo">Título</option>
                                <option value="institucion">Institución</option>
                                <option value="duracion">Duración</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button class="btn btn-outline-secondary w-100" @onclick="LimpiarFiltros">
                                <i class="fas fa-eraser"></i> Limpiar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista de Proyectos -->
        <div class="container mt-4 mb-5">
            @if (!ProyectosFiltrados.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-3">
                        <i class="fas fa-project-diagram fa-3x text-muted"></i>
                    </div>
                    <h5 class="text-muted">No se encontraron proyectos de investigación</h5>
                    <p class="text-muted">@(string.IsNullOrEmpty(FiltroTexto) ? "Este docente no tiene proyectos registrados" : "Intenta con otros términos de búsqueda")</p>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var proyecto in ProyectosFiltrados)
                    {
                        <div class="col-12 mb-3">
                            <div class="card border-0 shadow-sm project-card">
                                <div class="card-body">
                                    <div class="row align-items-start">
                                        <div class="col-md-12">
                                            <div class="d-flex align-items-start mb-2">
                                                <div class="me-3">
                                                    <div class="rounded-circle d-flex align-items-center justify-content-center" 
                                                         style="width: 45px; height: 45px; background-color: #E8F5E8;">
                                                        <i class="fas fa-project-diagram" style="color: #2D6B3C;"></i>
                                                    </div>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <h5 class="card-title mb-1">@proyecto.Titulo</h5>
                                                    <p class="text-primary mb-1">
                                                        <i class="fas fa-university me-1"></i>@proyecto.Institucion
                                                    </p>
                                                    <div class="d-flex align-items-center text-muted small mb-2 flex-wrap">
                                                        <span class="me-3">
                                                            <i class="fas fa-user-tie me-1"></i>@proyecto.RolFormateado
                                                        </span>
                                                        <span class="me-3">
                                                            <i class="fas fa-calendar me-1"></i>@proyecto.PeriodoFormateado
                                                        </span>
                                                        <span class="me-3">
                                                            <i class="fas fa-clock me-1"></i>@proyecto.DuracionAnios año@(proyecto.DuracionAnios > 1 ? "s" : "")
                                                        </span>
                                                        @if (proyecto.TieneFinanciamiento)
                                                        {
                                                            <span class="me-3">
                                                                <i class="fas fa-dollar-sign me-1"></i>@proyecto.FinanciamientoFormateado
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="d-flex align-items-center gap-2">
                                                        @if (proyecto.EsActivo)
                                                        {
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-circle"></i> En curso
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-secondary">Finalizado</span>
                                                        }
                                                        @if (proyecto.TieneFinanciamiento)
                                                        {
                                                            <span class="badge bg-warning text-dark">
                                                                <i class="fas fa-dollar-sign"></i> Financiado
                                                            </span>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter] public int IdDocente { get; set; }
    
    private List<ProyectoDTO> ListaProyectos = new();
    private List<ProyectoDTO> ProyectosFiltrados = new();
    private string NombreDocente = "";
    private bool CargandoProyectos = true;
    
    // Filtros
    private string FiltroTexto = "";
    private string FiltroEstado = "";
    private string OrdenarPor = "periodo";

    protected override async Task OnInitializedAsync()
    {
        await CargarDatos();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (IdDocente > 0)
        {
            await CargarDatos();
        }
    }

    private async Task CargarDatos()
    {
        try
        {
            CargandoProyectos = true;
            StateHasChanged();

            // Cargar docente
            var resultadoDocente = await DocenteServicios.ObtenerDocente<DocenteDTO>(IdDocente);
            if (resultadoDocente.Resultado && resultadoDocente.Entidad != null)
            {
                var docente = resultadoDocente.Entidad;
                NombreDocente = $"{docente.NombreDocente} {docente.PaternoDocente} {docente.MaternoDocente}".Trim();
            }

            // Cargar proyectos
            var proyectos = await ProyectoServicios.GetAllAsync();
            if (proyectos != null)
            {
                ListaProyectos = proyectos
                    .Where(p => p.IdDocente == IdDocente)
                    .Select(p => new ProyectoDTO
                    {
                        IdProyecto = p.IdProyecto,
                        IdDocente = p.IdDocente,
                        Titulo = p.Titulo,
                        Rol = p.Rol,
                        Institucion = p.Institucion,
                        Financiamiento = p.Financiamiento,
                        PeriodoInicio = p.PeriodoInicio,
                        PeriodoFin = p.PeriodoFin,
                        NombreDocente = NombreDocente
                    })
                    .ToList();
                    
                AplicarFiltros();
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al cargar datos: {ex.Message}");
        }
        finally
        {
            CargandoProyectos = false;
            StateHasChanged();
        }
    }

    private void AplicarFiltros()
    {
        var proyectosFiltrados = ListaProyectos.AsEnumerable();

        // Filtro por texto
        if (!string.IsNullOrEmpty(FiltroTexto))
        {
            proyectosFiltrados = proyectosFiltrados.Where(p =>
                (p.Titulo?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (p.Institucion?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (p.Rol?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (p.Financiamiento?.Contains(FiltroTexto, StringComparison.OrdinalIgnoreCase) ?? false)
            );
        }

        // Filtro por estado
        if (!string.IsNullOrEmpty(FiltroEstado))
        {
            proyectosFiltrados = FiltroEstado switch
            {
                "activo" => proyectosFiltrados.Where(p => p.EsActivo),
                "finalizado" => proyectosFiltrados.Where(p => !p.EsActivo),
                "financiado" => proyectosFiltrados.Where(p => p.TieneFinanciamiento),
                _ => proyectosFiltrados
            };
        }

        // Ordenar
        proyectosFiltrados = OrdenarPor switch
        {
            "titulo" => proyectosFiltrados.OrderBy(p => p.Titulo),
            "institucion" => proyectosFiltrados.OrderBy(p => p.Institucion),
            "duracion" => proyectosFiltrados.OrderByDescending(p => p.DuracionAnios),
            _ => proyectosFiltrados.OrderByDescending(p => p.PeriodoFin).ThenByDescending(p => p.PeriodoInicio)
        };

        ProyectosFiltrados = proyectosFiltrados.ToList();
        StateHasChanged();
    }

    private void LimpiarFiltros()
    {
        FiltroTexto = "";
        FiltroEstado = "";
        OrdenarPor = "periodo";
        AplicarFiltros();
    }

    private void RegresarAlPerfil()
    {
        NavigationManager.NavigateTo($"/CV/Docentes/Ver/{IdDocente}");
    }
}

<style>
    .project-card {
        transition: all 0.3s ease;
        border-left: 4px solid #E9ECEF;
    }

    .project-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(45, 107, 60, 0.15) !important;
        border-left-color: #2D6B3C;
    }

    .project-card .card-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2D6B3C;
        line-height: 1.3;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .badge {
        font-size: 0.7rem;
        font-weight: 500;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .project-card .card-body {
            padding: 1rem;
        }
        
        .d-flex.flex-wrap .me-3 {
            margin-bottom: 0.5rem;
        }
    }
</style> 